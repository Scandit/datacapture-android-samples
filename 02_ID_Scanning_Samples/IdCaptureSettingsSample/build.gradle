plugins {
    id("com.android.application")
    id("kotlin-android")
}

android {
    ndkVersion = sdk.ndk
    compileSdkVersion = sdk.compile
    namespace = "com.scandit.datacapture.idcapturesettingssample"

    defaultConfig {
        applicationId = "com.scandit.datacapture.idcapturesettingssample"
        minSdkVersion(sdk.min)
        targetSdkVersion(sdk.target)
        versionCode = 1
        versionName = "1.0"

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments['useTestStorageService'] = 'true'
        testInstrumentationRunnerArguments['clearPackageData'] = 'true'
    }

    buildTypes {
        release {
            minifyEnabled = false
            proguardFiles(getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro")
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled = true
        sourceCompatibility = versions.java
        targetCompatibility = versions.java
    }

    packagingOptions {
        jniLibs {
            pickFirsts += "**/*.so"
            it.useLegacyPackaging true
        }
    }

    splits {
        abi {
            enable project.hasProperty('enableSplit')
            reset()
            //noinspection ChromeOsAbiSupport
            include 'arm64-v8a'
            universalApk false
        }
    }

    testOptions {
        animationsDisabled = true
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
}

repositories {
    flatDir {
        dirs '../../../library'
    }
}

dependencies {
    api(name:"ScanditCaptureCore", ext:"aar")
    api(name:"ScanditIdCapture", ext:"aar")
    api(name:"ScanditIdCaptureBackend", ext:"aar")
    api(name:"ScanditIdVoidedDetection", ext:"aar")
    api(name:"ScanditIdEuropeDrivingLicense", ext:"aar")
    api(name:"ScanditIdAamvaBarcodeVerification", ext:"aar")
    api(name:"ScanditLabelCaptureText", ext:"aar")

    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:${versions.desugar}")

    implementation("org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}")

    implementation("androidx.appcompat:appcompat:${versions.androidx_appcompat}")
    implementation("com.google.android.material:material:${versions.material}")
    implementation("androidx.preference:preference:${versions.androidx_preference}")

}